<!DOCTYPE html>
%html
  %head
    %title#title
      #{@title}
    %meta{:charset => "utf-8"}
    %meta{:name => "viewport", :content=>"width=device-width, initial-scale=1, maximum-scale=1"}
    %meta{:name=>"apple-mobile-web-app-capable", :content=>"yes"}
    :javascript
      var enabled = true;
      var current_function = "";

      window.update = function(){};

      function getParam(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"), results = regex.exec(location.search);
        return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
      } 
      function togglePlayPause(elem) {
        enabled = !enabled;
        if(enabled) {
          elem.value = "Pause";
          update();
        }else{
          elem.value = "Play";
        }
      }

      var msgs = 0
      var rows = getParam("rows") || 9;
      var cols = getParam("cols") || 15;
      var queue = [];
      var delay = getParam("delay") || 300;

      function refreshDelay(elem) {
        delay=elem.value;
        document.getElementById("delay_lbl").innerHTML= delay;
      }

      var stream = new EventSource('/tweet_stream');
      stream.addEventListener('message', function(event) {
        //if(queue.length > 10) queue.pop();
        queue.push(JSON.parse(event.data));
      }, false);
      

      stream.addEventListener('open', function(e) {
          console.log(e);
          // Connection was opened.
      }, false);

      stream.addEventListener('error', function(e) {
          console.log(e);
          if (e.readyState == EventSource.CLOSED) {
                // Connection was closed.
                  }
      }, false);
      window.setTimeout(function() {window.update()}, delay);
      window.setInterval(function() { 
        document.getElementById("buffer_size").innerHTML = queue.length;  
      }, 1000);

    %link{rel: "stylesheet", href: "#{url_for '/css/bootstrap/3.1.1/bootstrap.min.css'}", :type => "text/css"}
    %link{rel: "stylesheet", href: "#{url_for '/css/default.css'}", :type => "text/css", :media => "screen" }
    %script{type: "text/javascript", src: "http://ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"}
    %script{type: "text/javascript", src:"/js/d3.min.js"}
    <!--%link{:rel => "stylesheet", :href => "http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/themes/base/jquery-ui.css", :type => "text/css"}-->
  %body
    %div.navbar.navbar-default.navbar-fixed-top
      %div.container
        %div.navbar-header.navbar-collapse.collapse
          %ul.nav.navbar-nav
            %li
              %a{href:"javascript:index();"}
                List
            %li
              %a{href:"javascript:collage();"}
                Collage
            %li
              %a{href:"javascript:stats();"}
                Stats
          %ul.refresh.navbar-nav.navbar-right
            %li.nav
              %label
                Refresh Rate: 
              %label{id:"delay_lbl"}
              %label
                ms
              %br
              %input#refresh_bar{type:"range", name:"refresh", min:"5", value:"300", max:"1000", step:"5", onchange:"refreshDelay(this)"}
            %li.nav
              %input#play_pause.btn{type:"button", name:"pause_play", value:"Pause", onclick:"togglePlayPause(this);"}
              %input#clear.btn{type:"button", name:"queue_clear", value:"Clear", onclick:"queue=[];document.getElementById('buffer_size').innerHTML='backlog cleared';"}
              %br
              %label
                msg backlog: 
              %label#buffer_size
    %div.container#content
      =yield
    %div.container
      %div.row
        %div.twelvecol
          %div.container.footer
:javascript
  document.getElementById("delay_lbl").innerHTML= delay;
  document.getElementById("refresh_bar").max= 500;
  document.getElementById("refresh_bar").value= delay;

  $(document).ready(function() {
    index();
  });
