#tweets
:javascript
  function index_update() {
    msgs += 1
    var msg = queue.shift();
    if(msg != null) {
      if(delay >= 30) {
        document.getElementById("tweets" + (msgs % rows)).innerHTML = "<table><tr><td><img src='" + msg.message.user.profile_image_uri + "' /></td><td align='center'><table><tr><td><a target='_' href='http://twitter.com/" + msg.message.user.screen_name + "'>" + msg.message.user.screen_name + "</a></td></tr><tr><td>" + msg.message.text + "</td></tr></table></td></tr></table>";
      }else{
        //no profile image
        document.getElementById("tweets" + (msgs % rows)).innerHTML = "<table><tr><td><a target='_' href='http://twitter.com/" + msg.message.user.screen_name + "'>" + msg.message.user.screen_name + "</a></td></tr><tr><td>" + msg.message.text + "</td></tr></table>";
      }
    }else {
      console.log("none: " + queue.length);
    }
    if(enabled) {
      window.setTimeout(function() {window.update()}, delay);
    }
  }

  function collage_update() {
    msgs += 1
    var msg = queue.shift();
    if(msg != null) {
      document.getElementById("img" + (msgs % img_cnt)).src= msg.message.user.profile_image_uri; 
      document.getElementById("link" + (msgs % img_cnt)).href= "http://twitter.com/" + msg.message.user.screen_name; 
      document.getElementById("link" + (msgs % img_cnt)).title= msg.message.text + " (" + msg.message.user.screen_name + ")"; 
    }else {
      console.log("none: " + queue.length);
    }
    if(enabled) {
      window.setTimeout(function() {window.update()}, delay);
    }
  }

  function index() {
    window.update = index_update;
    var curr_enabled = enabled;
    enabled = false;
    $('.refresh').show();
    $('#tweets').empty();
    $('#tweets').append(function() {
      var ret = "";
      for(var i = 0; i<rows; i++) {
        ret += "<div class='tweet' id='tweets" + i + "'></div>"
      }
      return ret;
    });
    enabled = curr_enabled;
  }

  function collage() {
    window.update = collage_update;
    var curr_enabled = enabled;
    enabled = false;
    window.img_cnt = rows * cols;

    $('.refresh').show();
    $('#tweets').empty();
    $("#tweets").append(function() {
      var ret = "";
      for(var i = 0; i<rows; i++) {
        ret += "<div class='tweets" + i + " tweet'>";
        for(var j=0; j<cols; j++) {
          var cell = cols*i + j;
          ret += "<a href='' id='link" + cell + "' target='_'><img class='profile' id='img" + cell + "'></a>";
        }
      }
      return ret;
    });
    enabled = curr_enabled;
  }

  function stats() {
    window.update = stats_update;
    var curr_enabled = enabled;
    enabled = false;
    enabled = curr_enabled;

    $('.refresh').hide();
    $('#tweets').empty();
    $("#tweets").append(function() {
      return "<div><svg id='chart'></svg></div><div><label id='rate' class='analytic'></label></div><div><label id='avg' class='analytic'></label></div><div><label id='tot' class='analytic'></label></div>";
    });

    segments = 29;
    data = new Array(segments).join('0').split('');
    w = 5, h = 100;
    msgs = 0
    cnts = [];
    updates = 0;
    last = queue.length;

    enabled = curr_enabled;
  }

  function getAvg(arr) {
    var ret = 0.0;
    for(var i=0; i<arr.length; i++ ) {
      ret += arr[i]/arr.length;
    }
    return Math.round(ret*10)/10;
  }
  function getTot(arr) {
    var ret = 0;
    for(var i=0; i<arr.length; i++ ) {
      ret += arr[i];
    }
    return ret;
  }

  function stats_update() {
    //console.log(msgs);
    if(data.length > segments) data.shift();
    msgs = queue.length - last
    last = queue.length;
    data.push([msgs, updates++]);
    cnts.push(msgs);
    document.getElementById("rate").innerHTML="curr: " + msgs + " msgs/sec";
    document.getElementById("avg").innerHTML=" avg: " + getAvg(cnts) + " msgs/sec";
    document.getElementById("tot").innerHTML=" tot: " + getTot(cnts) + " msgs";


    var chart = d3.select("#chart")
        .attr("class", "axis")
        .attr("class", "chart")
        .attr("width", w * data.length)
        .attr("height", h)

    var x = d3.scale.linear()
        .domain([0, 1])
        .range([0, w]);
                 
    var y = d3.scale.linear()
        .domain([0, d3.max(data)[0]])
        .range([0, h]); //rangeRound is used for antialiasing

    var rect = chart.selectAll("rect")
        .data(data, function(d) { return d[1];});

    rect.attr("x", function(d, i) { return x(i) - .5; })
        .attr("y", function(d) { return h - y(d[0]) - .5; })
        .attr("width", w)
        .attr("height", function(d) { return y(d[0]); } );
        
    rect.enter().append("rect")
        .attr("x", function(d, i) { return x(i) - .5; })
        //.attr("y", function(d) { return h })
      //.transition()
        .attr("y", function(d) { return h - y(d[0]) - .5; })
        .attr("width", w)
        .attr("height", function(d) { return y(d[0]); } );

    rect.exit()
        .remove();

    window.setTimeout(function() {window.update()}, 1000);
  }
